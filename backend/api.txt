# Beeget Fashion API Documentation

## Base URL
`http://localhost:5000/api`

## Authentication API

### Register
```
POST /auth/register

Request Body:
{
    "name": "John Doe",
    "email": "john@example.com",
    "password": "securepassword123"
}

Response:
{
    "success": true,
    "message": "Registration successful. Please verify your email."
}
```

### Login
```
POST /auth/login

Request Body:
{
    "email": "john@example.com",
    "password": "securepassword123"
}

Response:
{
    "success": true,
    "data": {
        "token": "jwt_token_here",
        "user": {
            "_id": "user_id",
            "name": "John Doe",
            "email": "john@example.com",
            "role": "user"
        }
    }
}
```

## User Profile API

### Get User Addresses
```
GET /user/addresses

Headers:
Authorization: Bearer jwt_token_here

Response:
{
    "success": true,
    "data": [
        {
            "_id": "address_id",
            "label": "Home",
            "line1": "123 Main St",
            "city": "New York",
            "state": "NY",
            "zip": "10001",
            "country": "USA"
        }
    ]
}
```

### Add New Address
```
POST /user/addresses

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "label": "Home",
    "line1": "123 Main St",
    "city": "New York",
    "state": "NY",
    "zip": "10001",
    "country": "USA"
}

Response:
{
    "success": true,
    "message": "Address added successfully",
    "data": {
        "_id": "address_id",
        "label": "Home",
        "line1": "123 Main St",
        "city": "New York",
        "state": "NY",
        "zip": "10001",
        "country": "USA"
    }
}
```

### Update Address
```
PUT /user/addresses/:addressId

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "label": "Office",
    "line1": "456 Business Ave",
    "city": "New York",
    "state": "NY",
    "zip": "10002",
    "country": "USA"
}

Response:
{
    "success": true,
    "message": "Address updated successfully",
    "data": {
        "_id": "address_id",
        "label": "Office",
        "line1": "456 Business Ave",
        "city": "New York",
        "state": "NY",
        "zip": "10002",
        "country": "USA"
    }
}
```

### Delete Address
```
DELETE /user/addresses/:addressId

Headers:
Authorization: Bearer jwt_token_here

Response:
{
    "success": true,
    "message": "Address deleted successfully"
}
```

## Products API

### Create Product (Admin)
```
POST /products

Request Body:
{
    "title": "New Product",
    "slug": "new-product",
    "description": "Product description",
    "price": 99.99,
    "salePrice": 79.99,
    "images": ["image_url_1", "image_url_2"],
    "categories": ["category_id_1", "category_id_2"],
    "collections": ["collection_id_1", "collection_id_2"],
    "tags": ["summer", "new"],
    "inventoryCount": 100
}

Response:
{
    "success": true,
    "data": {
        "_id": "product_id",
        "title": "New Product",
        "slug": "new-product",
        "description": "Product description",
        "price": 99.99,
        "salePrice": 79.99,
        "images": ["image_url_1", "image_url_2"],
        "categories": ["category_id_1", "category_id_2"],
        "collections": ["collection_id_1", "collection_id_2"],
        "tags": ["summer", "new"],
        "inventoryCount": 100
    }
}
```

### Get All Products
```
GET /products

Query Parameters:
- page (default: 1)
- limit (default: 10)
- search (optional)
- category (optional)
- collection (optional)
- minPrice (optional)
- maxPrice (optional)
- sort (optional: price_asc, price_desc, newest, popular)

Response:
{
    "success": true,
    "data": [
        {
            "_id": "product_id",
            "title": "Product Name",
            "slug": "product-name",
            "description": "Product description",
            "price": 99.99,
            "salePrice": 79.99,
            "images": ["image_url_1"],
            "categories": ["category_id_1"],
            "collections": ["collection_id_1"],
            "tags": ["summer"]
        }
    ],
    "pagination": {
        "total": 100,
        "page": 1,
        "pages": 10
    }
}
```

## Categories API

### Create Category (Admin)
```
POST /categories

Request Body:
{
    "name": "Summer Collection",
    "description": "Summer fashion collection",
    "image": "category_image_url"
}

Response:
{
    "success": true,
    "data": {
        "_id": "category_id",
        "name": "Summer Collection",
        "slug": "summer-collection",
        "description": "Summer fashion collection",
        "image": "category_image_url"
    }
}
```

### Get Categories
```
GET /categories

Response:
{
    "success": true,
    "data": [
        {
            "_id": "category_id",
            "name": "Summer Collection",
            "slug": "summer-collection",
            "description": "Summer fashion collection",
            "image": "category_image_url"
        }
    ]
}
```

## Collections API

### Create Collection (Admin)
```
POST /collections

Request Body:
{
    "name": "New Arrivals",
    "description": "Latest fashion collection",
    "image": "collection_image_url"
}

Response:
{
    "success": true,
    "data": {
        "_id": "collection_id",
        "name": "New Arrivals",
        "slug": "new-arrivals",
        "description": "Latest fashion collection",
        "image": "collection_image_url"
    }
}
```

### Get Collections
```
GET /collections

Response:
{
    "success": true,
    "data": [
        {
            "_id": "collection_id",
            "name": "New Arrivals",
            "slug": "new-arrivals",
            "description": "Latest fashion collection",
            "image": "collection_image_url"
        }
    ]
}
```

## Cart API

### Get Cart
```
GET /cart

Response:
{
    "success": true,
    "data": {
        "items": [
            {
                "product": {
                    "_id": "product_id",
                    "title": "Product Name",
                    "price": 99.99,
                    "salePrice": 79.99,
                    "image": "image_url"
                },
                "quantity": 2,
                "total": 159.98
            }
        ],
        "subtotal": 159.98,
        "total": 159.98
    }
}
```

### Add to Cart
```
POST /cart

Request Body:
{
    "productId": "product_id",
    "quantity": 2
}

Response:
{
    "success": true,
    "message": "Item added to cart",
    "data": {
        "items": [
            {
                "product": "product_id",
                "quantity": 2
            }
        ]
    }
}
```

## Orders API

### Create Order
```
POST /orders

Request Body:
{
    "items": [
        {
            "product": "product_id",
            "quantity": 2
        }
    ],
    "shippingAddress": {
        "street": "123 Main St",
        "city": "New York",
        "state": "NY",
        "zipCode": "10001",
        "country": "USA"
    },
    "paymentMethod": "card"
}

Response:
{
    "success": true,
    "data": {
        "_id": "order_id",
        "items": [
            {
                "product": {
                    "_id": "product_id",
                    "title": "Product Name",
                    "price": 99.99
                },
                "quantity": 2,
                "total": 199.98
            }
        ],
        "subtotal": 199.98,
        "total": 199.98,
        "status": "pending",
        "shippingAddress": {
            "street": "123 Main St",
            "city": "New York",
            "state": "NY",
            "zipCode": "10001",
            "country": "USA"
        },
        "paymentStatus": "pending"
    }
}
```

### Get Orders
```
GET /orders

Response:
{
    "success": true,
    "data": [
        {
            "_id": "order_id",
            "items": [
                {
                    "product": {
                        "title": "Product Name",
                        "price": 99.99
                    },
                    "quantity": 2,
                    "total": 199.98
                }
            ],
            "total": 199.98,
            "status": "pending",
            "createdAt": "2023-01-01T00:00:00.000Z"
        }
    ]
}
```

## Contact API

### Submit Contact Form
```
POST /contact

Request Body:
{
    "name": "John Doe",
    "email": "john@example.com",
    "subject": "Product Inquiry",
    "message": "I have a question about your products"
}

Response:
{
    "success": true,
    "message": "Thank you for contacting us. We will get back to you soon."
}
```

## CMS API

### Get Homepage Content
```
GET /cms/homepage

Response:
{
    "success": true,
    "data": {
        "hero": {
            "title": "Welcome to Beeget Fashion",
            "description": "Discover the latest trends",
            "image": "hero_image_url"
        },
        "featuredCollections": [
            {
                "_id": "collection_id",
                "name": "Summer Collection",
                "image": "collection_image_url"
            }
        ],
        "promotions": [
            {
                "title": "Summer Sale",
                "description": "Up to 50% off",
                "image": "promotion_image_url"
            }
        ]
    }
}
```

## Notification API

### Get Notifications
```
GET /notifications

Response:
{
    "success": true,
    "data": [
        {
            "_id": "notification_id",
            "title": "New Collection Launch",
            "message": "Check out our latest summer collection",
            "type": "new_product",
            "link": "/collections/summer-2023",
            "image": "notification_image_url",
            "isRead": false,
            "createdAt": "2023-06-01T00:00:00.000Z"
        }
    ]
}
```

### Get Unread Count
```
GET /notifications/unread/count

Response:
{
    "success": true,
    "data": {
        "count": 5
    }
}
```

### Mark as Read
```
PATCH /notifications/:id/read

Response:
{
    "success": true,
    "message": "Notification marked as read"
}
```

### Mark All as Read
```
PATCH /notifications/read-all

Response:
{
    "success": true,
    "message": "All notifications marked as read"
}
```

### Create Notification (Admin)
```
POST /notifications

Request Body:
{
    "title": "New Collection Launch",
    "message": "Check out our latest summer collection",
    "type": "new_product",
    "link": "/collections/summer-2023",
    "image": "notification_image_url"
}

Response:
{
    "success": true,
    "data": {
        "_id": "notification_id",
        "title": "New Collection Launch",
        "message": "Check out our latest summer collection",
        "type": "new_product",
        "link": "/collections/summer-2023",
        "image": "notification_image_url",
        "isRead": false,
        "createdAt": "2023-06-01T00:00:00.000Z"
    }
}
```

### Get Product Promotions
```
GET /promotions/product/:productId

Response:
{
    "success": true,
    "data": [
        {
            "_id": "promotion_id",
            "code": "SUMMER2023",
            "discountType": "percentage",
            "discountValue": 20,
            "endDate": "2023-08-31T23:59:59.999Z"
        }
    ]
}
```

### Get All Promotions (Admin)
```
GET /promotions

Response:
{
    "success": true,
    "data": [
        {
            "_id": "promotion_id",
            "code": "SUMMER2023",
            "discountType": "percentage",
            "discountValue": 20,
            "startDate": "2023-06-01T00:00:00.000Z",
            "endDate": "2023-08-31T23:59:59.999Z",
            "isActive": true
        }
    ]
}
```

## CMS Pages API

### Create Page (Admin)
```
POST /cms

Request Body:
{
    "title": "About Us",
    "slug": "about-us",
    "content": "<h1>About Us</h1><p>Welcome to our store...</p>",
    "isHomePage": false,
    "seo": {
        "title": "About Us - Beeget Fashion",
        "description": "Learn about Beeget Fashion",
        "keywords": ["about", "fashion", "store"]
    }
}

Response:
{
    "success": true,
    "data": {
        "_id": "page_id",
        "title": "About Us",
        "slug": "about-us",
        "content": "<h1>About Us</h1><p>Welcome to our store...</p>",
        "isHomePage": false,
        "seo": {
            "title": "About Us - Beeget Fashion",
            "description": "Learn about Beeget Fashion",
            "keywords": ["about", "fashion", "store"]
        }
    }
}
```

### Get Page by Slug
```
GET /cms/:slug

Response:
{
    "success": true,
    "data": {
        "_id": "page_id",
        "title": "About Us",
        "content": "<h1>About Us</h1><p>Welcome to our store...</p>",
        "seo": {
            "title": "About Us - Beeget Fashion",
            "description": "Learn about Beeget Fashion",
            "keywords": ["about", "fashion", "store"]
        }
    }
}
```
## Promotion API

### Create Promotion (Admin)
```
POST /promotions

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "name": "Summer Sale 2023",
    "description": "Get amazing discounts on summer collection",
    "image": "promotion_image_url",
    "discountType": "percentage",
    "discountValue": 20,
    "startDate": "2023-06-01T00:00:00.000Z",
    "endDate": "2023-08-31T23:59:59.999Z",
    "active": true,
    "applicableProducts": ["product_id_1", "product_id_2"],
    "applicableCategories": ["category_id_1"],
    "minimumPurchase": 100,
    "promotionType": "general"
}

Response:
{
    "success": true,
    "data": {
        "_id": "promotion_id",
        "name": "Summer Sale 2023",
        "slug": "summer-sale-2023",
        "description": "Get amazing discounts on summer collection",
        "image": "promotion_image_url",
        "discountType": "percentage",
        "discountValue": 20,
        "startDate": "2023-06-01T00:00:00.000Z",
        "endDate": "2023-08-31T23:59:59.999Z",
        "active": true,
        "applicableProducts": ["product_id_1", "product_id_2"],
        "applicableCategories": ["category_id_1"],
        "minimumPurchase": 100,
        "promotionType": "general",
        "usageLimit": null,
        "usageCount": 0
    }
}
```

### Create Coupon Promotion (Admin)
```
POST /promotions

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "name": "Exclusive User Coupon",
    "description": "Special discount for loyal customers",
    "image": "coupon_image_url",
    "discountType": "percentage",
    "discountValue": 15,
    "startDate": "2023-06-01T00:00:00.000Z",
    "endDate": "2023-12-31T23:59:59.999Z",
    "active": true,
    "applicableProducts": [],
    "applicableCategories": [],
    "minimumPurchase": 50,
    "promotionType": "coupon",
    "couponPrefix": "LOYAL",
    "couponLength": 8,
    "couponExpireDays": 30
}

Response:
{
    "success": true,
    "data": {
        "_id": "promotion_id",
        "name": "Exclusive User Coupon",
        "slug": "exclusive-user-coupon",
        "description": "Special discount for loyal customers",
        "image": "coupon_image_url",
        "discountType": "percentage",
        "discountValue": 15,
        "startDate": "2023-06-01T00:00:00.000Z",
        "endDate": "2023-12-31T23:59:59.999Z",
        "active": true,
        "minimumPurchase": 50,
        "promotionType": "coupon",
        "couponPrefix": "LOYAL",
        "couponLength": 8,
        "couponExpireDays": 30,
        "userCoupons": []
    }
}
```

### Generate User Coupons (Admin)
```
POST /promotions/generate-coupons

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "promotionId": "promotion_id",
    "userIds": ["user_id_1", "user_id_2", "user_id_3"]
}

Response:
{
    "success": true,
    "data": {
        "results": [
            {
                "userId": "user_id_1",
                "email": "user1@example.com",
                "couponCode": "LOYAL-AB12CD34",
                "expiresAt": "2023-07-15T00:00:00.000Z",
                "status": "success"
            },
            {
                "userId": "user_id_2",
                "email": "user2@example.com",
                "couponCode": "LOYAL-EF56GH78",
                "expiresAt": "2023-07-15T00:00:00.000Z",
                "status": "success"
            },
            {
                "userId": "user_id_3",
                "email": "user3@example.com",
                "status": "skipped",
                "message": "User already has an active coupon for this promotion"
            }
        ],
        "successCount": 2,
        "skippedCount": 1,
        "errorCount": 0
    }
}
```

### Get User's Coupons
```
GET /promotions/user/:userId

Headers:
Authorization: Bearer jwt_token_here

Response:
{
    "success": true,
    "data": [
        {
            "promotionId": "promotion_id",
            "promotionName": "Exclusive User Coupon",
            "promotionDescription": "Special discount for loyal customers",
            "discountType": "percentage",
            "discountValue": 15,
            "couponCode": "LOYAL-AB12CD34",
            "isUsed": false,
            "expiresAt": "2023-07-15T00:00:00.000Z",
            "isExpired": false,
            "image": "coupon_image_url"
        }
    ]
}
```

### Verify Coupon
```
POST /promotions/verify-coupon

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "couponCode": "LOYAL-AB12CD34",
    "userId": "user_id_1"
}

Response:
{
    "success": true,
    "data": {
        "promotionId": "promotion_id",
        "promotionName": "Exclusive User Coupon",
        "discountType": "percentage",
        "discountValue": 15,
        "couponCode": "LOYAL-AB12CD34",
        "expiresAt": "2023-07-15T00:00:00.000Z"
    }
}
```

### Redeem Coupon
```
POST /promotions/redeem-coupon

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "couponCode": "LOYAL-AB12CD34",
    "userId": "user_id_1",
    "orderId": "order_id"
}

Response:
{
    "success": true,
    "message": "Coupon redeemed successfully",
    "data": {
        "promotionId": "promotion_id",
        "promotionName": "Exclusive User Coupon",
        "discountType": "percentage",
        "discountValue": 15,
        "couponCode": "LOYAL-AB12CD34",
        "redeemedAt": "2023-06-15T10:30:00.000Z"
    }
}
```

## Wishlist API

### Get User's Wishlist
```
GET /wishlist

Headers:
Authorization: Bearer jwt_token_here

Response:
{
    "success": true,
    "data": [
        {
            "productId": {
                "_id": "product_id",
                "title": "Product Name",
                "price": 99.99,
                "salePrice": 79.99,
                "images": ["image_url_1"],
                "slug": "product-name",
                "stock": 100
            },
            "addedAt": "2023-06-01T00:00:00.000Z",
            "_id": "wishlist_item_id"
        }
    ]
}
```

### Add Item to Wishlist
```
POST /wishlist

Headers:
Authorization: Bearer jwt_token_here

Request Body:
{
    "productId": "product_id"
}

Response:
{
    "success": true,
    "message": "Product added to wishlist",
    "data": [
        {
            "productId": {
                "_id": "product_id",
                "title": "Product Name",
                "price": 99.99,
                "salePrice": 79.99,
                "images": ["image_url_1"],
                "slug": "product-name",
                "stock": 100
            },
            "addedAt": "2023-06-01T00:00:00.000Z",
            "_id": "wishlist_item_id"
        }
    ]
}
```

### Remove Item from Wishlist
```
DELETE /wishlist/:productId

Headers:
Authorization: Bearer jwt_token_here

Response:
{
    "success": true,
    "message": "Product removed from wishlist",
    "data": [
        {
            "productId": {
                "_id": "other_product_id",
                "title": "Other Product",
                "price": 149.99,
                "salePrice": 129.99,
                "images": ["image_url_2"],
                "slug": "other-product",
                "stock": 50
            },
            "addedAt": "2023-06-02T00:00:00.000Z",
            "_id": "other_wishlist_item_id"
        }
    ]
}
```

### Clear Wishlist
```
DELETE /wishlist

Headers:
Authorization: Bearer jwt_token_here

Response:
{
    "success": true,
    "message": "Wishlist cleared",
    "data": []
}
```
